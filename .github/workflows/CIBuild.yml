name: Automated Testing with .Net Core

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.browser }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2025, macos-latest]
        browser: [Chromeheadless, Firefoxheadless, Edgeheadless]
        exclude:
          - os: ubuntu-latest
            browser: Firefoxheadless
          - os: macos-latest
            browser: Edgeheadless

    steps:
      - uses: actions/checkout@v5

      - uses: szenius/set-timezone@v2.0
        with:
          timezoneWindows: "AUS Eastern Standard Time"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
  
      - name: Restore dependencies (AutomationTestSample)
        run: dotnet restore AutomationTestSample/AutomationTestSample.csproj
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: AutomationTestSample/ClientApp/node_modules
          key: npm-${{ hashFiles('AutomationTestSample/ClientApp/package-lock.json') }}
          restore-keys: |
            npm-

      - name: Install npm dependencies
        working-directory: AutomationTestSample/ClientApp
        run: npm install --legacy-peer-deps
        
      - name: Build AutomationTestSample
        run: dotnet build --no-restore AutomationTestSample/AutomationTestSample.csproj

      - name: Generate self-signed SSL cert (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p ~/.aspnet/https
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout ~/.aspnet/https/automationtestsample.key \
            -out ~/.aspnet/https/automationtestsample.pem \
            -subj "/CN=localhost"

      - name: Restore dependencies (EverlightRadiology)
        run: dotnet restore EverlightRadiology/EverlightRadiology.csproj
  
      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["**/*.json"]'
        env:
          browser: ${{ matrix.browser }}

      - name: Build EverlightRadiology
        run: dotnet build --no-restore EverlightRadiology/EverlightRadiology.csproj
          
      - name: Test
        run: dotnet test EverlightRadiology/EverlightRadiology.csproj --no-build --verbosity normal

      - name: Upload Artifact
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: artifact_${{ matrix.os }}_${{ matrix.browser }}
          path: |
            ${{ github.workspace }}/EverlightRadiology/Logs/
          if-no-files-found: warn
          compression-level: 9